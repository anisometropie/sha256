import {
  sha256,
  encode,
  addPadding,
} from '../index'

describe('encode', () => {
  it('should encode to binary', () => {
    expect(encode('a')).toEqual('01100001')
  })
});

describe('addPadding', () => {
  it('should', () => {
    const message = encode('abc')
    expect(addPadding(message).length).toEqual(512)
    expect(addPadding(message)).toEqual(
      '01100001' +
      '01100010' +
      '01100011' + 
      '1' +
      '000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000011000'
      )
  })
});

describe('sha256', () => {
  it('should', () => {
    expect(sha256('abc')).toEqual('ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad')
    expect(sha256('ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad'))
      .toEqual('dfe7a23fefeea519e9bbfdd1a6be94c4b2e4529dd6b7cbea83f9959c2621b13c')
  })
});